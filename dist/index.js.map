{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@galeh/anki/./src/index.ts","webpack://@galeh/anki/./src/lib/anki-exporter.ts","webpack://@galeh/anki/./src/lib/create-anki.ts","webpack://@galeh/anki/./src/lib/extract-text-from-subtitle.ts","webpack://@galeh/anki/./src/lib/get-split-times.ts","webpack://@galeh/anki/./src/lib/get-subtitle-blocks.ts","webpack://@galeh/anki/./src/lib/main.ts","webpack://@galeh/anki/./src/lib/output-file-name-calculate.ts","webpack://@galeh/anki/./src/lib/reduce-time.ts","webpack://@galeh/anki/./src/lib/split-audio.ts","webpack://@galeh/anki/./src/lib/template.ts","webpack://@galeh/anki/./src/lib/time-to-seconds.ts","webpack://@galeh/anki/external commonjs \"archiver\"","webpack://@galeh/anki/external commonjs \"progress\"","webpack://@galeh/anki/external commonjs \"rxjs\"","webpack://@galeh/anki/external commonjs \"sha1\"","webpack://@galeh/anki/external commonjs \"sql.js/js/sql-memory-growth\"","webpack://@galeh/anki/external commonjs \"srt-parser-2\"","webpack://@galeh/anki/external commonjs \"yargs\"","webpack://@galeh/anki/external commonjs \"yargs/helpers\"","webpack://@galeh/anki/external node-commonjs \"child_process\"","webpack://@galeh/anki/external node-commonjs \"fs\"","webpack://@galeh/anki/external node-commonjs \"os\"","webpack://@galeh/anki/external node-commonjs \"path\"","webpack://@galeh/anki/webpack/bootstrap","webpack://@galeh/anki/webpack/runtime/create fake namespace object","webpack://@galeh/anki/webpack/runtime/define property getters","webpack://@galeh/anki/webpack/runtime/hasOwnProperty shorthand","webpack://@galeh/anki/webpack/runtime/make namespace object","webpack://@galeh/anki/webpack/before-startup","webpack://@galeh/anki/webpack/startup","webpack://@galeh/anki/webpack/after-startup"],"sourcesContent":["import yargs from 'yargs';\nimport { hideBin } from 'yargs/helpers';\nimport { main } from './lib/main';\n\ninterface ArgType {\n    input: string;\n    srt: string[];\n    convert: boolean;\n    concurrent: number;\n    deck: string;\n}\n\nyargs(hideBin(process.argv))\n    .command<ArgType>(\n        '$0 <input>',\n        'Create anki decks using a video and its subtitle',\n        (yargs) => {\n            yargs\n                .positional('input', {\n                    describe: 'The input file path',\n                    type: 'string',\n                })\n                .option('srt', {\n                    describe: 'The SRT file(s)',\n                    type: 'array',\n                    default: []\n                })\n                .option('convert', {\n                    alias: 'c',\n                    type: 'boolean',\n                    default: false,\n                    description: 'Converts the input file to mp3 before splitting'\n                })\n                .options('concurrent', {\n                    type: 'number',\n                    default: 10,\n                    description: 'Maximum concurrent output files to be created'\n                }).\n                options('deck', {\n                    alias: 'd',\n                    type: 'string',\n                    description: 'Anki deck name, default is the input file name'\n                });\n        },\n        async ({ input, srt, convert, concurrent, deck }) => {\n            await main({\n                inputFile: input,\n                srtFileList: srt,\n                convert,\n                concurrent,\n                deck\n            });\n        }\n    )\n    .help()\n    .argv;\n","import sha1 from 'sha1';\nimport archiver from 'archiver';\nimport { createTemplate } from './template';\nimport sql from 'sql.js/js/sql-memory-growth';\nimport fs from 'fs';\n\nclass Exporter {\n  private db: sql.Database;\n  private deckName;\n  private zip;\n  private media: any[];\n  private topDeckId: number;\n  private topModelId;\n  private separator;\n\n  constructor(deckName: string, { template, sql }: any) {\n    this.db = new sql.Database();\n    this.db.run(template);\n\n    const now = Date.now();\n    const topDeckId = this._getId('cards', 'did', now);\n    const topModelId = this._getId('notes', 'mid', now);\n\n    this.deckName = deckName;\n    this.zip = archiver('zip', {\n      zlib: { level: 9 }\n    });\n\n    this.media = [];\n    this.topDeckId = topDeckId;\n    this.topModelId = topModelId;\n    this.separator = '\\u001F';\n\n    const decks = this._getInitialRowValue('col', 'decks');\n    const deck = getLastItem(decks);\n    deck.name = this.deckName;\n    deck.id = topDeckId;\n    decks[topDeckId + ''] = deck;\n    this._update('update col set decks=:decks where id=1', { ':decks': JSON.stringify(decks) });\n\n    const models = this._getInitialRowValue('col', 'models');\n    const model = getLastItem(models);\n    model.name = this.deckName;\n    model.did = this.topDeckId;\n    model.id = topModelId;\n    models[`${topModelId}`] = model;\n    this._update('update col set models=:models where id=1', { ':models': JSON.stringify(models) });\n  }\n\n  save(path: string) {\n    return new Promise<void>((res, rej) => {\n      const output = fs.createWriteStream(path);\n      this.zip.on('close', function() {\n        res();\n      });\n      \n      // Catch any errors that might occur\n      this.zip.on('error', function(err) {\n        rej(err)\n      });\n\n      const binaryArray = this.db.export();\n      const mediaObj = this.media.reduce((prev, curr, idx) => {\n        prev[idx] = curr.filename;\n        return prev;\n      }, {});\n  \n      this.zip.append(Buffer.from(binaryArray), { name: 'collection.anki2' });\n      this.zip.append(JSON.stringify(mediaObj), { name: 'media'});\n  \n      this.media.forEach((item, i) => this.zip.file(item.filePath, { name: `${i}` }));\n\n      this.zip.pipe(output);\n      this.zip.finalize();\n    });\n\n  }\n\n  addMedia(filename: string, filePath: string) {\n    this.media.push({ filename, filePath });\n  }\n\n  addCard(front: string, back: string, { tags }: { tags?: string[]} = { tags: undefined}) {\n    const { topDeckId, topModelId, separator } = this;\n    const now = Date.now();\n    const note_guid = this._getNoteGuid(topDeckId, front, back);\n    const note_id = this._getNoteId(note_guid, now);\n\n    let strTags = '';\n    if (typeof tags === 'string') {\n      strTags = tags;\n    } else if (Array.isArray(tags)) {\n      strTags = this._tagsToStr(tags);\n    }\n\n    this._update('insert or replace into notes values(:id,:guid,:mid,:mod,:usn,:tags,:flds,:sfld,:csum,:flags,:data)', {\n      ':id': note_id, // integer primary key,\n      ':guid': note_guid, // text not null,\n      ':mid': topModelId, // integer not null,\n      ':mod': this._getId('notes', 'mod', now), // integer not null,\n      ':usn': -1, // integer not null,\n      ':tags': strTags, // text not null,\n      ':flds': front + separator + back, // text not null,\n      ':sfld': front, // integer not null,\n      ':csum': this._checksum(front + separator + back), //integer not null,\n      ':flags': 0, // integer not null,\n      ':data': '' // text not null,\n    });\n\n    return this._update(\n      'insert or replace into cards values(:id,:nid,:did,:ord,:mod,:usn,:type,:queue,:due,:ivl,:factor,:reps,:lapses,:left,:odue,:odid,:flags,:data)',\n      {\n        ':id': this._getCardId(note_id, now), // integer primary key,\n        ':nid': note_id, // integer not null,\n        ':did': topDeckId, // integer not null,\n        ':ord': 0, // integer not null,\n        ':mod': this._getId('cards', 'mod', now), // integer not null,\n        ':usn': -1, // integer not null,\n        ':type': 0, // integer not null,\n        ':queue': 0, // integer not null,\n        ':due': 179, // integer not null,\n        ':ivl': 0, // integer not null,\n        ':factor': 0, // integer not null,\n        ':reps': 0, // integer not null,\n        ':lapses': 0, // integer not null,\n        ':left': 0, // integer not null,\n        ':odue': 0, // integer not null,\n        ':odid': 0, // integer not null,\n        ':flags': 0, // integer not null,\n        ':data': '' // text not null\n      }\n    );\n  }\n\n  _update(query: string, obj: any) {\n    this.db.prepare(query).getAsObject(obj);\n  }\n\n  _getInitialRowValue(table: string, column = 'id') {\n    const query = `select ${column} from ${table}`;\n    return this._getFirstVal(query);\n  }\n\n  _checksum(str: string) {\n    return parseInt(sha1(str).substr(0, 8), 16);\n  }\n\n  _getFirstVal(query: string) {\n    return JSON.parse(this.db.exec(query)[0].values[0] as any);\n  }\n\n  _tagsToStr(tags: string[] = []) {\n    return ' ' + tags.map(tag => tag.replace(/ /g, '_')).join(' ') + ' ';\n  }\n\n  _getId(table: string, col: string, ts: number) {\n    const query = `SELECT ${col} from ${table} WHERE ${col} >= :ts ORDER BY ${col} DESC LIMIT 1`;\n    const rowObj = this.db.prepare(query).getAsObject({ ':ts': ts });\n\n    return rowObj[col] ? +rowObj[col] + 1 : ts;\n  }\n\n  _getNoteId(guid: string, ts: number) {\n    const query = `SELECT id from notes WHERE guid = :guid ORDER BY id DESC LIMIT 1`;\n    const rowObj = this.db.prepare(query).getAsObject({ ':guid': guid });\n\n    return rowObj.id || this._getId('notes', 'id', ts);\n  }\n\n  _getNoteGuid(topDeckId: number, front: string, back: string) {\n    return sha1(`${topDeckId}${front}${back}`);\n  }\n\n  _getCardId(note_id: any, ts: number): any {\n    const query = `SELECT id from cards WHERE nid = :note_id ORDER BY id DESC LIMIT 1`;\n    const rowObj = this.db.prepare(query).getAsObject({ ':note_id': note_id });\n\n    return rowObj.id || this._getId('cards', 'id', ts);\n  }\n}\n\nfunction getLastItem(obj: any) {\n  const keys = Object.keys(obj);\n  const lastKey = keys[keys.length - 1];\n\n  const item = obj[lastKey];\n  delete obj[lastKey];\n\n  return item;\n};\n\nexport function AnkiExporter(deckName: string, template?: any) {\n  return new Exporter(deckName, {\n    template: createTemplate(template),\n    sql\n  });\n}","import { AnkiExporter } from './anki-exporter';\nimport path from 'path';\nimport { CardMeta } from './type/card-meta';\n\nexport function createAnki(deckName: string, cardData: CardMeta[]) {\n  const randomNumber = Math.random();\n  const prefix = `${deckName}-${randomNumber}`\n  return new Promise<void>((res, rej) => {\n    const apkg = AnkiExporter(deckName);\n   \n    cardData.forEach(card => {\n      const mediaAddress = `${prefix}-${card.fileName}`;\n      const text = card.text.reduce((prev, cur) => {\n        return prev + `<p>${cur}</p>`;\n      }, '');\n      apkg.addMedia(mediaAddress, card.media);\n      apkg.addCard(`[sound:${mediaAddress}]`, `${text}`);\n    });\n\n    apkg\n      .save(path.resolve(`${deckName}.apkg`))\n      .then(() => {\n        res();\n      })\n      .catch(err => rej(err.stack || err));\n  });\n}\n","import { timeToSeconds } from './time-to-seconds';\nimport { Subtitle } from './type/subtitle';\nimport { SubtitleBlock } from './type/subtitle-block';\n\nexport function extractTextFromSubtitle(splitTimes: SubtitleBlock[], subtitleBlocks: Subtitle[]) {\n    const subtitleWithConvertedTimes = subtitleBlocks.map(subBlock => {\n        return {\n            start: timeToSeconds(subBlock.startTime),\n            end: timeToSeconds(subBlock.endTime),\n            text: subBlock.text\n        };\n    })\n    return splitTimes.map(({ start, end, text }) => {\n        const includedSubs = subtitleWithConvertedTimes.filter(sub => Math.max(start, sub.start) <= Math.min(end, sub.end));\n        const currentText = includedSubs.reduce((prev, cur) => {\n            return prev + ' ' + cur.text;\n        }, '');\n        return {\n            start,\n            end,\n            text: text ? [...text, currentText] : [currentText]\n        }\n    });\n}\n","import { spawn } from 'child_process';\nimport { timeToSeconds } from './time-to-seconds';\nimport { SubtitleBlock } from './type/subtitle-block';\n\nexport function getSplitTimes(inputFile: string) {\n    return new Promise<SubtitleBlock[]>((resolve, reject) => {\n        const silentPeriods: Partial<SubtitleBlock>[] = [];\n        let durationMatch: any;\n\n        const ffmpeg = spawn('ffmpeg', [\n            '-i', inputFile,\n            '-af', 'silencedetect=noise=-20dB:d=0.5', // Adjust threshold & duration as needed\n            '-f', 'null', '-'\n        ]);\n\n        ffmpeg.stderr.on('data', (data) => {\n            const output = data.toString();\n\n            // Match silence_start, silence_end, and silence_duration from ffmpeg output\n            const silenceStartRegex = /silence_start: ([0-9.]+)/;\n            const silenceEndRegex = /silence_end: ([0-9.]+)/;\n            durationMatch = output.match(/Duration: (\\d{2}:\\d{2}:\\d{2}\\.\\d{2})/) || durationMatch;\n\n            output.split('\\n').forEach((line: string) => {\n                const silenceStartMatch = silenceStartRegex.exec(line);\n                const silenceEndMatch = silenceEndRegex.exec(line);\n\n                if (silenceStartMatch) {\n                    silentPeriods.push({ start: parseFloat(silenceStartMatch[1]) });\n                }\n\n                if (silenceEndMatch) {\n                    const lastPeriod = silentPeriods[silentPeriods.length - 1];\n                    if (lastPeriod) {\n                        lastPeriod.end = parseFloat(silenceEndMatch[1]);\n                    }\n                }\n            });\n        });\n\n        ffmpeg.on('error', (err) => {\n            reject(`Error running ffmpeg: ${err.message}`);\n        });\n\n        ffmpeg.on('close', (code) => {\n            if (code === 0) {\n                const fileDuration = timeToSeconds(durationMatch[1]);\n                resolve(getSplits(silentPeriods, fileDuration, 0.5));\n            } else {\n                reject(`ffmpeg exited with code ${code}`);\n            }\n        });\n    });\n}\n\n\nfunction getSplits(silences: Partial<SubtitleBlock>[], duration: number, maxSilenceDuration: number): SubtitleBlock[] {\n    if (!silences || !silences.length) {\n        return [];\n    }\n\n    const modifiedSilences = silences.map(({start, end}) => {\n        const gap = end - start;\n\n        if (gap > (2 * maxSilenceDuration)) {\n            return buildBlock(start + maxSilenceDuration, end - maxSilenceDuration)\n        } else {\n            return buildBlock((start + end) / 2, (start + end) / 2)\n        }\n    });\n\n    const nonSilentPoints: SubtitleBlock[] = [];\n\n    for (let i = 0; i < modifiedSilences.length - 1; i++) {\n        nonSilentPoints.push(buildBlock(modifiedSilences[i].end, modifiedSilences[i + 1].start));\n    }\n\n    if(modifiedSilences[0].start > 0) {\n        nonSilentPoints.unshift(buildBlock(0, modifiedSilences[0].start));\n    }\n\n    if (modifiedSilences[modifiedSilences.length - 1].end < duration) {\n        nonSilentPoints.push(buildBlock(modifiedSilences[modifiedSilences.length - 1].end, duration));\n    }\n\n    return nonSilentPoints;\n}\n\nfunction buildBlock(start: number, end: number): SubtitleBlock {\n    if((start === undefined) && (end === undefined)) {\n        throw \"start and end are required\";\n    }\n\n    return { start, end, text: [] }\n}\n","import fs from 'fs';\nimport { Subtitle } from './type/subtitle';\n\nexport function getSubtitleBlocks(srtFileName: string): Promise<Subtitle[]> {\n    return import('srt-parser-2').then(m => {\n        const SrtParser = m.default;\n\n        const parser = new SrtParser();\n\n        return new Promise<Subtitle[]>((res, rej) => {\n            fs.readFile(srtFileName, 'utf8', (err, data) => {\n                if (err) {\n                    rej('Error reading file:' + err);\n                }\n                const items = parser.fromSrt(data);\n\n                res(items);\n            });\n        });\n    });\n}\n","import path from 'path';\n\nimport { getSubtitleBlocks } from './get-subtitle-blocks';\nimport { splitAudio } from './split-audio';\nimport ProgressBar from 'progress';\nimport { from, mergeMap } from 'rxjs';\nimport { createAnki } from './create-anki';\nimport { getSplitTimes } from './get-split-times';\nimport { extractTextFromSubtitle } from './extract-text-from-subtitle';\nimport { outputFileNameCalculate } from './output-file-name-calculate';\nimport { reduceTime } from './reduce-time';\nimport { Subtitle } from './type/subtitle';\nimport { SubtitleBlock } from './type/subtitle-block';\nimport { CardMeta } from './type/card-meta';\nimport chalk from 'chalk';\n\nexport async function main({\n    inputFile,\n    srtFileList,\n    convert,\n    concurrent,\n    deck\n}: {\n    inputFile: string,\n    srtFileList: string[],\n    convert: boolean,\n    concurrent: number,\n    deck: string\n}) {\n    const deckName = deck ? deck : path.basename(inputFile).split('.').shift();\n    const sanitisedDeckName = fullSanitize(deckName);\n    const prefixedInputFile = path.resolve(inputFile);\n    const prefixedSrtList = srtFileList.map(srtFile => path.resolve(srtFile));\n    console.log('Analysing the video file...');\n    const subtitleList: Subtitle[][] = [];\n    for (const subtitlePath of prefixedSrtList) {\n        subtitleList.push(await getSubtitleBlocks(subtitlePath));\n    }\n\n    const timesAndTexts: SubtitleBlock[] = subtitleList.reduce((prev, curr) => {\n        return extractTextFromSubtitle(prev, curr);\n    }, await getSplitTimes(prefixedInputFile));\n\n    const reducedTimeAndTextx = reduceTime(timesAndTexts);\n\n    const { prefix, getFileName, getPrefixedFileName } = await outputFileNameCalculate(reducedTimeAndTextx.length, convert);\n\n    console.log(\"Creating splitted files...\");\n    console.log(`Temporary directory: ${prefix}`);\n\n    console.log();\n    const green = '\\x1b[32m';\n    const reset = '\\x1b[0m';\n    const bar1 = new ProgressBar(`${green}Splitting progress (:bar) :percent${reset}`, {\n        complete: '\\u2588',\n        incomplete: '\\u2591',\n        clear: true,\n        total: reducedTimeAndTextx.length\n    });\n    \n    const jobAndCards = reducedTimeAndTextx.map((time, indx) => {\n        const splitFileName = getFileName(indx);\n        const prefixedSplitFileName = getPrefixedFileName(indx);\n\n        return {\n            job: splitAudio(prefixedInputFile, time.start, time.end, prefixedSplitFileName, convert),\n            card: { text: time.text, media: prefixedSplitFileName, fileName: splitFileName }\n        }\n    });\n\n    const jobs = jobAndCards.map(jobAndCard => jobAndCard.job);\n    const cardData: CardMeta[] = jobAndCards.map(jobAndCard => jobAndCard.card);\n\n    const progressMap = new Map<string, number>();\n\n    from(jobs).pipe(\n        mergeMap(obs => obs, concurrent)\n    ).subscribe({\n        next: (fileDone) => {\n            progressMap.set(fileDone, 1);\n            const newProgress = Array.from(progressMap.values()).reduce((prev, cur) => {\n                return prev + cur;\n            }, 0);\n\n            bar1.update(newProgress / reducedTimeAndTextx.length);\n        },\n        error: e => {\n            console.error(e);\n        },\n        complete: () => {\n            bar1.terminate();\n            console.log();\n            createAnki(sanitisedDeckName, cardData).then(() => {\n                console.log(`${sanitisedDeckName} created!`);\n            }).catch(e => {\n                console.error(\"Error in creation of anki deck.\");\n                console.error(e);\n            })\n        }\n    });\n}\n\nfunction fullSanitize(filename: string) {\n    const forbiddenChars = /[\\\\\\/:*?\"<>|]/g;\n    const sanitized = filename.replace(forbiddenChars, '');\n    const reservedNames = /^(CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9])$/i;\n\n    if (reservedNames.test(sanitized)) {\n        return sanitized + '_';\n    }\n\n    return sanitized;\n}\n","import fs from 'fs';\nimport path from 'path';\nimport os from 'os';\n\nexport async function outputFileNameCalculate(fileCount: number, shouldConvert: boolean) {\n    const prefix = await getPrefix();\n    const suffix = shouldConvert ? 'mp3' : 'mp4';\n    const fileNameLen = (''+fileCount).length;\n\n    function getFileName(index: number) {\n        return `${padNumber(index + 1, fileNameLen)}.${suffix}`\n    }\n\n    return {\n        prefix,\n        getFileName,\n        getPrefixedFileName(index: number) {\n            return path.join(prefix, getFileName(index));\n        }\n    }\n}\n\nfunction getPrefix(): Promise<string> {\n    return new Promise<string>((res, rej) => {\n        const resOutput = path.join(os.tmpdir(), Math.random().toString());\n        fs.mkdirSync(resOutput);\n        res(resOutput);\n    });\n}\n\nfunction padNumber(number: number, length: number): string {\n    return number.toString().padStart(length, '0');\n}\n","import { SubtitleBlock } from './type/subtitle-block';\n\nexport function reduceTime(timesAndTexts: SubtitleBlock[]): SubtitleBlock[] {\n    return timesAndTexts;\n}","\nimport { Observable } from 'rxjs';\nimport { spawn } from 'child_process';\n\nexport function splitAudio(inputFile: string, startTime: number, endTime: number, outputFile: string, isConvert: boolean) {\n    const duration = endTime - startTime;\n\n    return new Observable<string>((subscriber) => {\n        const cmdFfmpeg = isConvert ? spawn('ffmpeg', [\n            '-i',\n            inputFile,\n            '-ss',\n            `${startTime}`,\n            '-t',\n            `${duration}`,\n            '-vn',\n            '-ac',\n            '2',\n            '-c:a',\n            'mp3',\n            '-b:a',\n            '192k',\n            outputFile\n        ]): spawn('ffmpeg', [\n            '-i',\n            inputFile,\n            '-ss',\n            `${startTime}`,\n            '-t',\n            `${duration}`,\n            '-c:v',\n            'libx264',\n            '-c:a',\n            'aac',\n            '-b:a',\n            '128k',\n            outputFile\n        ]);\n\n        cmdFfmpeg.on('close', (code) => {\n            if (code === 0) {\n                subscriber.next(outputFile);\n                subscriber.complete();\n            } else {\n                subscriber.error(`ffmpeg exited with code ${code}`);\n            }\n        });\n    });\n}\n","// @ts-nocheck\n\nexport function createTemplate({\n  questionFormat= '{{Front}}',\n  answerFormat = '{{FrontSide}}\\n\\n<hr id=\"answer\">\\n\\n{{Back}}',\n  css = '.card {\\n font-family: arial;\\n font-size: 20px;\\n text-align: center;\\n color: black;\\nbackground-color: white;\\n}\\n'\n} = {}) {\n  const conf = {\n    nextPos: 1,\n    estTimes: true,\n    activeDecks: [1],\n    sortType: 'noteFld',\n    timeLim: 0,\n    sortBackwards: false,\n    addToCur: true,\n    curDeck: 1,\n    newBury: true,\n    newSpread: 0,\n    dueCounts: true,\n    curModel: '1435645724216',\n    collapseTime: 1200\n  };\n\n  const models = {\n    1388596687391: {\n      veArs: [],\n      name: 'Basic-f15d2',\n      tags: ['Tag'],\n      did: 1435588830424,\n      usn: -1,\n      req: [[0, 'all', [0]]],\n      flds: [\n        {\n          name: 'Front',\n          media: [],\n          sticky: false,\n          rtl: false,\n          ord: 0,\n          font: 'Arial',\n          size: 20\n        },\n        {\n          name: 'Back',\n          media: [],\n          sticky: false,\n          rtl: false,\n          ord: 1,\n          font: 'Arial',\n          size: 20\n        }\n      ],\n      sortf: 0,\n      latexPre:\n        '\\\\documentclass[12pt]{article}\\n\\\\special{papersize=3in,5in}\\n\\\\usepackage[utf8]{inputenc}\\n\\\\usepackage{amssymb,amsmath}\\n\\\\pagestyle{empty}\\n\\\\setlength{\\\\parindent}{0in}\\n\\\\begin{document}\\n',\n      tmpls: [\n        {\n          name: 'Card 1',\n          qfmt: questionFormat,\n          did: null,\n          bafmt: '',\n          afmt: answerFormat,\n          ord: 0,\n          bqfmt: ''\n        }\n      ],\n      latexPost: '\\\\end{document}',\n      type: 0,\n      id: 1388596687391,\n      css,\n      mod: 1435645658\n    }\n  };\n\n  const decks = {\n    1: {\n      desc: '',\n      name: 'Default',\n      extendRev: 50,\n      usn: 0,\n      collapsed: false,\n      newToday: [0, 0],\n      timeToday: [0, 0],\n      dyn: 0,\n      extendNew: 10,\n      conf: 1,\n      revToday: [0, 0],\n      lrnToday: [0, 0],\n      id: 1,\n      mod: 1435645724\n    },\n    1435588830424: {\n      desc: '',\n      name: 'Template',\n      extendRev: 50,\n      usn: -1,\n      collapsed: false,\n      newToday: [545, 0],\n      timeToday: [545, 0],\n      dyn: 0,\n      extendNew: 10,\n      conf: 1,\n      revToday: [545, 0],\n      lrnToday: [545, 0],\n      id: 1435588830424,\n      mod: 1435588830\n    }\n  };\n\n  const dconf = {\n    1: {\n      name: 'Default',\n      replayq: true,\n      lapse: {\n        leechFails: 8,\n        minInt: 1,\n        delays: [10],\n        leechAction: 0,\n        mult: 0\n      },\n      rev: {\n        perDay: 100,\n        fuzz: 0.05,\n        ivlFct: 1,\n        maxIvl: 36500,\n        ease4: 1.3,\n        bury: true,\n        minSpace: 1\n      },\n      timer: 0,\n      maxTaken: 60,\n      usn: 0,\n      new: {\n        perDay: 20,\n        delays: [1, 10],\n        separate: true,\n        ints: [1, 4, 7],\n        initialFactor: 2500,\n        bury: true,\n        order: 1\n      },\n      mod: 0,\n      id: 1,\n      autoplay: true\n    }\n  };\n\n  return `\n      PRAGMA foreign_keys=OFF;\n      BEGIN TRANSACTION;\n      CREATE TABLE col (\n          id              integer primary key,\n          crt             integer not null,\n          mod             integer not null,\n          scm             integer not null,\n          ver             integer not null,\n          dty             integer not null,\n          usn             integer not null,\n          ls              integer not null,\n          conf            text not null,\n          models          text not null,\n          decks           text not null,\n          dconf           text not null,\n          tags            text not null\n      );\n      INSERT INTO \"col\" VALUES(\n        1,\n        1388548800,\n        1435645724219,\n        1435645724215,\n        11,\n        0,\n        0,\n        0,\n        '${JSON.stringify(conf)}',\n        '${JSON.stringify(models)}',\n        '${JSON.stringify(decks)}',\n        '${JSON.stringify(dconf)}',\n        '{}'\n      );\n      CREATE TABLE notes (\n          id              integer primary key,   /* 0 */\n          guid            text not null,         /* 1 */\n          mid             integer not null,      /* 2 */\n          mod             integer not null,      /* 3 */\n          usn             integer not null,      /* 4 */\n          tags            text not null,         /* 5 */\n          flds            text not null,         /* 6 */\n          sfld            integer not null,      /* 7 */\n          csum            integer not null,      /* 8 */\n          flags           integer not null,      /* 9 */\n          data            text not null          /* 10 */\n      );\n      CREATE TABLE cards (\n          id              integer primary key,   /* 0 */\n          nid             integer not null,      /* 1 */\n          did             integer not null,      /* 2 */\n          ord             integer not null,      /* 3 */\n          mod             integer not null,      /* 4 */\n          usn             integer not null,      /* 5 */\n          type            integer not null,      /* 6 */\n          queue           integer not null,      /* 7 */\n          due             integer not null,      /* 8 */\n          ivl             integer not null,      /* 9 */\n          factor          integer not null,      /* 10 */\n          reps            integer not null,      /* 11 */\n          lapses          integer not null,      /* 12 */\n          left            integer not null,      /* 13 */\n          odue            integer not null,      /* 14 */\n          odid            integer not null,      /* 15 */\n          flags           integer not null,      /* 16 */\n          data            text not null          /* 17 */\n      );\n      CREATE TABLE revlog (\n          id              integer primary key,\n          cid             integer not null,\n          usn             integer not null,\n          ease            integer not null,\n          ivl             integer not null,\n          lastIvl         integer not null,\n          factor          integer not null,\n          time            integer not null,\n          type            integer not null\n      );\n      CREATE TABLE graves (\n          usn             integer not null,\n          oid             integer not null,\n          type            integer not null\n      );\n      ANALYZE sqlite_master;\n      INSERT INTO \"sqlite_stat1\" VALUES('col',NULL,'1');\n      CREATE INDEX ix_notes_usn on notes (usn);\n      CREATE INDEX ix_cards_usn on cards (usn);\n      CREATE INDEX ix_revlog_usn on revlog (usn);\n      CREATE INDEX ix_cards_nid on cards (nid);\n      CREATE INDEX ix_cards_sched on cards (did, queue, due);\n      CREATE INDEX ix_revlog_cid on revlog (cid);\n      CREATE INDEX ix_notes_csum on notes (csum);\n      COMMIT;\n    `;\n}","export function timeToSeconds(time: string) {\n    const parts = time.split(':');\n    const secondsParts = parts[2].includes(',') ? parts[2].split(',') : parts[2].split('.');\n    \n    const hours = parseInt(parts[0], 10);\n    const minutes = parseInt(parts[1], 10);\n    const seconds = parseInt(secondsParts[0], 10);\n    const milliseconds = parseInt(secondsParts[1], 10);\n    \n    return hours * 3600 + minutes * 60 + seconds + milliseconds / 1000;\n}","module.exports = require(\"archiver\");","module.exports = require(\"progress\");","module.exports = require(\"rxjs\");","module.exports = require(\"sha1\");","module.exports = require(\"sql.js/js/sql-memory-growth\");","module.exports = require(\"srt-parser-2\");","module.exports = require(\"yargs\");","module.exports = require(\"yargs/helpers\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}